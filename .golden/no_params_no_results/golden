{-# OPTIONS_GHC -Wno-unused-imports #-}

module DeleteFromAddresses
  (query)
where

import Control.Applicative ((<*>))
import Data.Bool (Bool (True))
import Data.ByteString (ByteString)
import Data.Function (($))
import Data.Functor ((<$>))
import Data.Maybe (Maybe)
import Hasql.Decoders qualified as Decoders
import Hasql.Encoders qualified as Encoders
import Hasql.Statement (Statement (Statement))
import Hasql.Transaction (Transaction, statement)

query ::
  Transaction ()
query =
  statement
   params
   (Statement sql encoder decoder True)

  where
    sql :: ByteString
    sql = "delete from addresses;"

    params :: ()
    params = ()

    encoder :: Encoders.Params ()
    encoder =
      Encoders.noParams

    decoder :: Decoders.Result ()
    decoder =
      Decoders.noResult
